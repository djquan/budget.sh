kind: pipeline
name: default

services:
- name: db
  image: postgres

steps:
# - name: test
#   image: reg.quan.io/dan/elixir:1.9
#   environment:
#     MIX_ENV: test
#     POSTGRES_HOST: "db"
#   commands:
#     - cd backend
#     - mix deps.get
#     - mix ecto.reset
#     - mix test
# - name: dialyzer
#   image: reg.quan.io/dan/elixir:1.9
#   commands:
#     - cd backend
#     - mix deps.get
#     - mix dialyzer
# - name: docker
#   when:
#     branch:
#     - master
#   image: plugins/docker
#   settings:
#     repo: reg.quan.io/dan/budgetsh
#     tags:
#       - latest
#       - ${DRONE_COMMIT_SHA}
#     username:
#       from_secret: docker_username
#     password:
#       from_secret: docker_password
#     registry: reg.quan.io
#     dockerfile: backend/Dockerfile
#     context: backend
- name: deploy - migrate db
  image: reg.quan.io/dan/drone-kubectl:latest
  when:
    branch:
    - master
  settings:
    kubernetes_server:
      from_secret: kubernetes_host
    kubernetes_cert:
      from_secret: kubernetes_crt
    kubernetes_token:
      from_secret: kubernetes_token
  commands:
    # - sed -ie "s/latest/$DRONE_COMMIT_SHA/" kubernetes/migrate_job.yaml
    - kubectl apply -f kubernetes/migrate_job.yaml
    - sleep 50
    - kubectl wait --for=condition=complete -f kubernetes/migrate_job.yaml
    - kubectl delete -f kubernetes/migrate_job.yaml
- name: deploy - app
  image: reg.quan.io/dan/drone-kubectl:latest
  when:
    branch:
    - master
  settings:
    kubernetes_server:
      from_secret: kubernetes_host
    kubernetes_cert:
      from_secret: kubernetes_crt
    kubernetes_token:
      from_secret: kubernetes_token
  commands:
    # - sed -ie "s/latest/$DRONE_COMMIT_SHA/" kubernetes/application.yaml
    - sed -ie "s/DEPLOY_TIME/$(date)/" kubernetes/application.yaml
    - kubectl apply -f kubernetes/application.yaml

image_pull_secrets:
- dockerconfigjson